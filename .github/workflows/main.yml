# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
    # Triggers the workflow on push or pull request events but only for the devel branch
    push:
        branches: [devel]
    pull_request:
        branches: [devel]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    build:
        runs-on: ubuntu-latest
        timeout-minutes: 10

        steps:
            # Checks-out the repository under $GITHUB_WORKSPACE
            - uses: actions/checkout@v4
              with:
                  submodules: recursive
                  lfs: true

            - uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Cache node modules
              id: cache-node-modules
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules

            - name: yarn install
              uses: nick-fields/retry@v3
              with:
                  timeout_minutes: 10
                  max_attempts: 3
                  command: yarn install

            - name: Eslint
              run: yarn lint

            - name: Prettier check
              run: yarn prettier:check

            - name: Type check
              run: yarn type-check

            - name: Test the Build
              run: yarn build-ci

            - name: Start frontend server
              run: yarn vite &

            - name: Wait for server
              run: timeout 30 bash -c 'until curl -s http://localhost:8080 > /dev/null; do sleep 1; done'

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Cache Playwright Docker image
              run: |
                # Try to pull from our cache first
                if docker pull ghcr.io/${{ github.repository }}/playwright:v1.51.0-noble; then
                  echo "Successfully pulled cached Playwright image"
                else
                  echo "Cache miss - pulling from Microsoft registry"
                  # Pull from Microsoft and tag for our cache
                  docker pull mcr.microsoft.com/playwright:v1.51.0-noble
                  docker tag mcr.microsoft.com/playwright:v1.51.0-noble ghcr.io/${{ github.repository }}/playwright:v1.51.0-noble
                  # Push to our cache
                  docker push ghcr.io/${{ github.repository }}/playwright:v1.51.0-noble
                fi

            - name: Tests
              run: yarn test:ci

            - name: Upload test results
              uses: actions/upload-artifact@v4
              with:
                name: test-results
                path: test-results/
                retention-days: 7

            - uses: streetsidesoftware/cspell-action@v6
              with:
                  files: src/**/*.{ts,tsx}
